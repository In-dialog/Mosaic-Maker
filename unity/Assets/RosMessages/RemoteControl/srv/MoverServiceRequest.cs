//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.RemoteControl
{
    [Serializable]
    public class MoverServiceRequest : Message
    {
        public const string k_RosMessageName = "remote_control/MoverService";
        public override string RosMessageName => k_RosMessageName;

        public string type;
        //  Type of operation (e.g., "move" or "initialize")
        public double[] joints;
        //  Current joint value
        public double scale_velocity;
        //  Scale of the velocity
        public double scale_acceleration;
        //  scale of the acceleration
        public Geometry.PoseMsg destination_pose;
        //  Destination position and orientation
        public OrientationConstraintsMsg constraint;
        //  Constraints for the motion
        public CollisionBoxMsg[] static_attachments;
        //  Static attachment objects (e.g., objects initially attached to the robot)
        public CollisionBoxMsg[] dynamic_attachments;
        //  Dynamic attachment objects (e.g., objects added/removed during movement)
        public CollisionBoxMsg[] scene_objects;
        //  Static collision objects

        public MoverServiceRequest()
        {
            this.type = "";
            this.joints = new double[6];
            this.scale_velocity = 0.0;
            this.scale_acceleration = 0.0;
            this.destination_pose = new Geometry.PoseMsg();
            this.constraint = new OrientationConstraintsMsg();
            this.static_attachments = new CollisionBoxMsg[0];
            this.dynamic_attachments = new CollisionBoxMsg[0];
            this.scene_objects = new CollisionBoxMsg[0];
        }

        public MoverServiceRequest(string type, double[] joints, double scale_velocity, double scale_acceleration, Geometry.PoseMsg destination_pose, OrientationConstraintsMsg constraint, CollisionBoxMsg[] static_attachments, CollisionBoxMsg[] dynamic_attachments, CollisionBoxMsg[] scene_objects)
        {
            this.type = type;
            this.joints = joints;
            this.scale_velocity = scale_velocity;
            this.scale_acceleration = scale_acceleration;
            this.destination_pose = destination_pose;
            this.constraint = constraint;
            this.static_attachments = static_attachments;
            this.dynamic_attachments = dynamic_attachments;
            this.scene_objects = scene_objects;
        }

        public static MoverServiceRequest Deserialize(MessageDeserializer deserializer) => new MoverServiceRequest(deserializer);

        private MoverServiceRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.type);
            deserializer.Read(out this.joints, sizeof(double), 6);
            deserializer.Read(out this.scale_velocity);
            deserializer.Read(out this.scale_acceleration);
            this.destination_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.constraint = OrientationConstraintsMsg.Deserialize(deserializer);
            deserializer.Read(out this.static_attachments, CollisionBoxMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.dynamic_attachments, CollisionBoxMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.scene_objects, CollisionBoxMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.type);
            serializer.Write(this.joints);
            serializer.Write(this.scale_velocity);
            serializer.Write(this.scale_acceleration);
            serializer.Write(this.destination_pose);
            serializer.Write(this.constraint);
            serializer.WriteLength(this.static_attachments);
            serializer.Write(this.static_attachments);
            serializer.WriteLength(this.dynamic_attachments);
            serializer.Write(this.dynamic_attachments);
            serializer.WriteLength(this.scene_objects);
            serializer.Write(this.scene_objects);
        }

        public override string ToString()
        {
            return "MoverServiceRequest: " +
            "\ntype: " + type.ToString() +
            "\njoints: " + System.String.Join(", ", joints.ToList()) +
            "\nscale_velocity: " + scale_velocity.ToString() +
            "\nscale_acceleration: " + scale_acceleration.ToString() +
            "\ndestination_pose: " + destination_pose.ToString() +
            "\nconstraint: " + constraint.ToString() +
            "\nstatic_attachments: " + System.String.Join(", ", static_attachments.ToList()) +
            "\ndynamic_attachments: " + System.String.Join(", ", dynamic_attachments.ToList()) +
            "\nscene_objects: " + System.String.Join(", ", scene_objects.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
