//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Assets
{
    [Serializable]
    public class CommandStringResultMsg : Message
    {
        public const string k_RosMessageName = "Assets/CommandStringResult";
        public override string RosMessageName => k_RosMessageName;

        public string command;
        public bool success;
        public string message;
        public short code;
        public string output;

        public CommandStringResultMsg()
        {
            this.command = "";
            this.success = false;
            this.message = "";
            this.code = 0;
            this.output = "";
        }

        public CommandStringResultMsg(string command, bool success, string message, short code, string output)
        {
            this.command = command;
            this.success = success;
            this.message = message;
            this.code = code;
            this.output = output;
        }

        public static CommandStringResultMsg Deserialize(MessageDeserializer deserializer) => new CommandStringResultMsg(deserializer);

        private CommandStringResultMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.command);
            deserializer.Read(out this.success);
            deserializer.Read(out this.message);
            deserializer.Read(out this.code);
            deserializer.Read(out this.output);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.command);
            serializer.Write(this.success);
            serializer.Write(this.message);
            serializer.Write(this.code);
            serializer.Write(this.output);
        }

        public override string ToString()
        {
            return "CommandStringResultMsg: " +
            "\ncommand: " + command.ToString() +
            "\nsuccess: " + success.ToString() +
            "\nmessage: " + message.ToString() +
            "\ncode: " + code.ToString() +
            "\noutput: " + output.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
